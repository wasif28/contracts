/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20WithSupply,
  ERC20WithSupplyInterface,
} from "../ERC20WithSupply";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b504660a081905261002081610029565b6080525061009c565b60007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a7946921882306040516020016100609392919061007d565b604051602081830303815290604052805190602001209050919050565b92835260208301919091526001600160a01b0316604082015260600190565b60805160a051610aa76100bf6000398061063e5250806106735250610aa76000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c806370a0823111610076578063a9059cbb1161005b578063a9059cbb14610127578063d505accf1461013a578063dd62ed3e1461014f576100a3565b806370a08231146101015780637ecebe0014610114576100a3565b8063095ea7b3146100a857806318160ddd146100d157806323b872dd146100e65780633644e515146100f9575b600080fd5b6100bb6100b6366004610845565b610162565b6040516100c891906108b3565b60405180910390f35b6100d96101cd565b6040516100c891906108be565b6100bb6100f4366004610792565b6101d3565b6100d9610356565b6100d961010f36600461073c565b610365565b6100d961012236600461073c565b610377565b6100bb610135366004610845565b610389565b61014d6101483660046107d2565b61047b565b005b6100d961015d36600461075e565b61061c565b3360008181526001602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906101bb9086906108be565b60405180910390a35060015b92915050565b60035481565b60008115610301576001600160a01b0384166000908152602081905260409020548281101561021d5760405162461bcd60e51b815260040161021490610a14565b60405180910390fd5b836001600160a01b0316856001600160a01b0316146102ff576001600160a01b038516600090815260016020908152604080832033845290915290205460001981146102ac57838110156102835760405162461bcd60e51b81526004016102149061096f565b6001600160a01b0386166000908152600160209081526040808320338452909152902084820390555b6001600160a01b0385166102d25760405162461bcd60e51b815260040161021490610938565b506001600160a01b0380861660009081526020819052604080822086850390559186168152208054840190555b505b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161034491906108be565b60405180910390a35060019392505050565b6000610360610639565b905090565b60006020819052908152604090205481565b60026020526000908152604090205481565b6000811515806103a15750336001600160a01b038416145b156104385733600090815260208190526040902054828110156103d65760405162461bcd60e51b815260040161021490610a14565b336001600160a01b03851614610436576001600160a01b03841661040c5760405162461bcd60e51b815260040161021490610938565b3360009081526020819052604080822085840390556001600160a01b038616825290208054840190555b505b826001600160a01b0316336001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516101bb91906108be565b6001600160a01b0387166104a15760405162461bcd60e51b8152600401610214906109dd565b8342106104c05760405162461bcd60e51b8152600401610214906109a6565b6001600160a01b038716600081815260026020908152604091829020805460018181019092559251909261053e92610523927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9928e928e928e92918e91016108c7565b60405160208183030381529060405280519060200120610699565b8585856040516000815260200160405260405161055e949392919061091a565b6020604051602081039080840390855afa158015610580573d6000803e3d6000fd5b505050602060405103516001600160a01b0316146105b05760405162461bcd60e51b815260040161021490610a4b565b6001600160a01b038088166000818152600160209081526040808320948b168084529490915290819020889055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061060b9089906108be565b60405180910390a350505050505050565b600160209081526000928352604080842090915290825290205481565b6000467f000000000000000000000000000000000000000000000000000000000000000081146106715761066c816106ee565b610693565b7f00000000000000000000000000000000000000000000000000000000000000005b91505090565b600060405180604001604052806002815260200161190160f01b8152506106be610639565b836040516020016106d19392919061086f565b604051602081830303815290604052805190602001209050919050565b60007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a7946921882306040516020016106d1939291906108fb565b80356001600160a01b03811681146101c757600080fd5b60006020828403121561074d578081fd5b6107578383610725565b9392505050565b60008060408385031215610770578081fd5b61077a8484610725565b91506107898460208501610725565b90509250929050565b6000806000606084860312156107a6578081fd5b83356107b181610a82565b925060208401356107c181610a82565b929592945050506040919091013590565b600080600080600080600060e0888a0312156107ec578283fd5b6107f68989610725565b96506108058960208a01610725565b95506040880135945060608801359350608088013560ff81168114610828578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610857578182fd5b6108618484610725565b946020939093013593505050565b60008451815b8181101561088f5760208188018101518583015201610875565b8181111561089d5782828501525b5091909101928352506020820152604001919050565b901515815260200190565b90815260200190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b92835260208301919091526001600160a01b0316604082015260600190565b93845260ff9290921660208401526040830152606082015260800190565b60208082526016908201527f45524332303a206e6f207a65726f206164647265737300000000000000000000604082015260600190565b60208082526018908201527f45524332303a20616c6c6f77616e636520746f6f206c6f770000000000000000604082015260600190565b6020808252600e908201527f45524332303a2045787069726564000000000000000000000000000000000000604082015260600190565b60208082526018908201527f45524332303a204f776e65722063616e6e6f7420626520300000000000000000604082015260600190565b60208082526016908201527f45524332303a2062616c616e636520746f6f206c6f7700000000000000000000604082015260600190565b60208082526018908201527f45524332303a20496e76616c6964205369676e61747572650000000000000000604082015260600190565b6001600160a01b0381168114610a9757600080fd5b5056fea164736f6c634300060c000a";

export class ERC20WithSupply__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20WithSupply> {
    return super.deploy(overrides || {}) as Promise<ERC20WithSupply>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20WithSupply {
    return super.attach(address) as ERC20WithSupply;
  }
  connect(signer: Signer): ERC20WithSupply__factory {
    return super.connect(signer) as ERC20WithSupply__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20WithSupplyInterface {
    return new utils.Interface(_abi) as ERC20WithSupplyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20WithSupply {
    return new Contract(address, _abi, signerOrProvider) as ERC20WithSupply;
  }
}
